Fixes QA issues in configure.ac
  Removes automagic dependency on cppunit, and instead only builds tests
  when --enable-test is passed in.
  uses LIBS instead of LDFLAGS for linking libraries. Needed for building
  with --as-needed

Contributed by Nick Fortino (nfortino@gmail.com) 2/2/2009

--- schroot-1.2.1-old/configure.ac
+++ schroot-1.2.1/configure.ac
@@ -174,6 +174,15 @@
   AC_DEFINE_UNQUOTED([SBUILD_DEBUG], [1], [Enable debugging])
 fi
 
+AC_ARG_ENABLE([test], [AS_HELP_STRING([--enable-test], [Build unit tests])],
+              [ case "${enableval}" in
+                yes) enable_test="yes" ;;
+                no)  enable_test="no" ;;
+                unset)  enable_test="no" ;;
+                *) AC_MSG_RESULT([unknown])
+                   AC_MSG_ERROR([bad value ${enableval} for --enable-test]) ;;
+                esac])
+
 # Checks for programs.
 AC_PROG_CXX
 AC_LANG([C++])
@@ -194,7 +203,10 @@
 		   HAVE_UUID=true],
                   [HAVE_UUID=false])
 
-AM_PATH_CPPUNIT([1.10.0], [HAVE_CPPUNIT=true])
+if test "$enable_test" = "yes"; then
+  AM_PATH_CPPUNIT([1.10.0], [HAVE_CPPUNIT=true])
+fi
+
 AM_CONDITIONAL([USE_UNIT_TESTS], [test -n "$HAVE_CPPUNIT"])
 
 SCHROOT_CFLAGS="$UUID_CFLAGS"
@@ -239,19 +251,19 @@
 AC_SUBST([LOCKDEV_LIBS])
 
 AC_MSG_CHECKING([for boost::program_options::variables_map in -lboost_program_options])
-saved_ldflags="${LDFLAGS}"
-LDFLAGS="${LDFLAGS} -lboost_program_options"
+saved_LIBS="${LIBS}"
+LIBS="${LIBS} -lboost_program_options"
 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <boost/program_options.hpp>],
                                [boost::program_options::variables_map::variables_map dummy()])],
                [AC_MSG_RESULT([yes])
 	        BOOST_LIBS="${BOOST_LIBS} -lboost_program_options"],
                [AC_MSG_RESULT([no])
 	        AC_MSG_FAILURE([libboost_program_options (Boost C++ Libraries) is not installed, but is required by schroot])])
-LDFLAGS="${saved_ldflags}"
+LIBS="${saved_LIBS}"
 
 AC_MSG_CHECKING([for boost::program_options::options_description::options() in -lboost_program_options])
-saved_ldflags="${LDFLAGS}"
-LDFLAGS="${LDFLAGS} -lboost_program_options"
+saved_LIBS="${LIBS}"
+LIBS="${LIBS} -lboost_program_options"
 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <boost/program_options.hpp>],
                                [boost::program_options::options_description testgrp("test group");
                                 bool notused = testgrp.options().empty();
@@ -260,33 +272,33 @@
                 BOOST_PROGRAM_OPTIONS_DESCRIPTION_METHODS="current"],
                [AC_MSG_RESULT([no])
                 BOOST_PROGRAM_OPTIONS_DESCRIPTION_METHODS="old"])
-LDFLAGS="${saved_ldflags}"
+LIBS="${saved_LIBS}"
 AH_TEMPLATE(BOOST_PROGRAM_OPTIONS_DESCRIPTION_OLD, [Set if boost::program_options::options_description::options() is not available])
 if test "$BOOST_PROGRAM_OPTIONS_DESCRIPTION_METHODS" = "old"; then
   AC_DEFINE(BOOST_PROGRAM_OPTIONS_DESCRIPTION_OLD, 1)
 fi
 
 AC_MSG_CHECKING([for boost::regex in -lboost_regex])
-saved_ldflags="${LDFLAGS}"
-LDFLAGS="${LDFLAGS} -lboost_regex"
+saved_LIBS="${LIBS}"
+LIBS="${LIBS} -lboost_regex"
 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <boost/regex.hpp>],
                                [boost::regex("^foo[bar]$")])],
                [AC_MSG_RESULT([yes])
 	        BOOST_LIBS="${BOOST_LIBS} -lboost_regex"],
                [AC_MSG_RESULT([no])
 	        AC_MSG_FAILURE([libboost_regex (Boost C++ Libraries) is not installed, but is required by schroot])])
-LDFLAGS="${saved_ldflags}"
+LIBS="${saved_LIBS}"
 
 AC_MSG_CHECKING([for boost::filesystem in -lboost_filesystem])
-saved_ldflags="${LDFLAGS}"
-LDFLAGS="${LDFLAGS} -lboost_filesystem"
+saved_LIBS="${LIBS}"
+LIBS="${LIBS} -lboost_filesystem"
 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <boost/filesystem.hpp>],
                                [boost::filesystem::is_directory("/")])],
                [AC_MSG_RESULT([yes])
 	        BOOST_LIBS="${BOOST_LIBS} -lboost_filesystem"],
                [AC_MSG_RESULT([no])
 	        AC_MSG_FAILURE([libboost_filesystem (Boost C++ Libraries) is not installed, but is required by schroot])])
-LDFLAGS="${saved_ldflags}"
+LIBS="${saved_LIBS}"
 
 AC_SUBST([BOOST_LIBS])
 
